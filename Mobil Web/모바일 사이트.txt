<유의사항>
사이트: https://jsk8702.github.io/Web_Portfolio/Mobil%20Web/index01.html

1. 그리드맵에서 텍스트 높이가 실제 작업시 텍스트 Height 값이다.

2. 디자인은 크기가 PSD 640px이 제일 좋다. 그거 보고 실제로는 그 절반 크기인 320픽셀로 작업한다.
모바일 최소 크기가 320px이기 때문이다. 따라서 640/2 는 320픽셀로 실제 작업하고 디자인은 640으로 한다.
원래 작업 할때는 실제 디자인 크기보다 1/2 작게 한다.

3. Meta에 viewport를 반드시 선언해 줄것.

4. html5, CSS3  요소를 많이 사용해 줄것. input 타입이나 백스라운드에 그라디언트 사용이 많다.
그라디언트가 단색보다 이미지 용량이 줄어들어서 속도가 빠르기 때문이다. 

5. 웹 호완성을 위해서 크로스 브라우징이 가능해야 한다. 그러나 그 기준을 모든 브라우저에 맞출 필요는 없다.
가장 많이 쓰는 크롬 같은 브라우저에 맞추면 된다. 익스플로어도 9 이상으로 맞추면 된다. 그 외에는
쓰는 사람 적어서 시간낭비다.

6. 유동형, 반응형 레이아웃을 만들어야 한다. 너비를 %로 주면 좋다. 그리고 스크롤이 안나와야 한다.

7. Pc에서 모바일 화면으로, 또는 모바일에서 Pc로 접속할때 각 기기의 브라우저 상황에 맞추어서
모바일에서는 모바일 화면으로 띄울지 아니면  PC화면으로 띄울지 결정해야 한다.

<1. 모바일 웹 시작>
1. 네이버 카페를 대상으로 한다. 이제 카페를 어덯게 구상할 지 알아보기 위해 카페를 이미지 캡쳐 해본다.
직접 모바일에서 캡쳐 해도 되고, 네이버 어플을 이용해서 네이버 카페에 들어간 다음 메뉴에서
캡쳐 -> 전체 캡쳐 하면 전체가 이미지로 저장된다. 그리고 이미지를 구글 드라이브나 
네이버 클라우드에 저장해서 pc로 옮긴다. 카톡으로 옮기면 화질에 손상분이 생겨서 좋지 않다.

2. 포토샵으로 저장한 이미지 가져와서 전체 크기를 수정해야 한다. 이미지 캡쳐는 해당 휴대폰 기종이나
프로그램에 따라 다 다르게 나온다. 그러나 모바일 사이트 제작은 너비가 640픽셀이어야 
나중에 제작 및 수정이 좋다. 따라서 이미지 크기를 640픽셀로 수정해서 저장한다.

3. 아이콘은 이미지에서 직접 가져오거나 폰트어썸 같은 웹폰트를 이용할 수 있다.



<2. 모바일 웹: 네이버 카페-헤더영역>
1. 모바일 웹은 보통 너비가 640픽셀 기준으로 만든다.

2. 헤더에서 필요한 이미지를 직접 모바일 카페에서 찾아본다. 이미지를 전체 복사 해서(네이버 어플 추천)
포토샵으로 가져온 다음에 이미지 크기를 640으로 수정한 다음에 저장하면 된다. 
로고나 아이콘 등을 생각해 두고, 이미지를 캡쳐해서 복사한 다음 각 종류별로 따로 이미지 파일로 
만들어서 저장한다. 요즘은 png 파일로 많이 만든다.

사진에서 원하는 부위 따기:먼저 레이어 없이 사진만 배경으로 있는 상태에서 원하는 부위에 
사각형 윤곽 그리기로 크게 잡고, 알트 누른 상태로 불필요한 부분은 지워주고, 쉬프트 눌러서 
필요한 부분은 잡아준다. 그 상태에서 이동도구 선택해서 해당 영역 선택해 주고 콘트롤 + c 눌러서
복사 한 다음에 새로 만들기 해서 캔버스 새로 만들면 내가 캡쳐한 크기 만큼 캔버스가 자동으로
생성된다. 그 상태에서 붙여넣기 하고 이미지 확인 한 다음에 다른 이름으로 저장 눌러서
png 파일로 저장하면 된다.

3. 헤더는 내비게이션 영역까지다.

4. 배너 사진 밑에 카페 추가하기 버튼은 배경색이 들어간 부분 모두 클릭 할수 있게 해줘야 한다.

5. <meta name="format-detection" content="telephone=no"> => 이건 링크에 전화번호 같이 있어서
모바일에서 누르면 전화번호부로 이동하는 문제를 막아준다.

6. 이제 로고 이미지를 헤더의 h1의 a 태그에 백그라운드 url로 넣는다. 그러면 실제 모바일에서 본 모습
보다 훨씬 크게 나타남을 알수 있다. 따라서 이미지를 만들 때 640픽셀로 만들었지만, 그것을 기준으로
실제 코딩할때는 이미지 상의 텍스트 크기, 아이콘 너비, 패딩, 마진, 등 모든 요소를 절반으로 줄여서
작업해야 한다. 만약, 텍스트 크기가 16픽셀, 아이콘 크기가 24*24 사이즈 라면, 실제 코딩 할 때는
텍스트의 폰트 사이즈는 8픽셀, 아이콘 크기는 12*12 로 만들어야 한다.

7. 이미지 자체 크기도 백그라운드로 수정 가능 하다. 예를 들어
background: url(../images/h1_logo.jpg) no-repeat 0 0 / 41px auto; => 이렇게 하면 이미지의
크기를 너비 41픽셀로 하고 높이는 거기에 맞춰서 자동으로 준다는 의미다.

8. 모바일 사이트는 가로 화면이 꽉 차게 나와야 한다. 왜냐면 기계 별로 화면 사이즈가 다 다르기
때문에 만약 가로 사이즈를 특정하게 주면, 안나오거나 짤리는 문제 가 발생한다.
따라서 너비는 100% 로 주는 것이 좋다.

9. h1 에 들어가는 로고가 헤더 위쪽 경계와 살짝 떨어져 있는 경우가 있다. 이건 h1 a 들이 모두
인라인-블럭인 경우에, 서로 만나면 그 사이에 공간이 만들어 지기 때문이다. 따라서 이런 문제를 해결
하기 위해서는 h1의 폰트 사이즈를 0으로 주고, h1 a 모두에 vertical-align: middle; 주면 된다.
그리고 a 태그에는 inline-block 줘야지 너비가 들어간다.

10. header nav 안에 텍스트 간에 간격을 자동정렬 해주고 싶다면,
header nav {text-align: justify;}
header nav ul {text-align: justify; text-align-last: justify;} 
header nav li {display: inline-block;}
이렇게 주면 된다.

11. text-align-last: justify; 는 해당 문장의 마지막 라인의 정렬방식을 자동으로 맞추겠다는 의미다.

12. header nav li a 의 높이는 이미지에 절반 높이로 넣는다. 텍스트 랑 똑같이 안주고 절반이나 높게 
주는 이유는 텍스트 근처를 눌렀을 때도 클릭이 되어야 하기 때문이다.

13. 현재 선택된 네비게이터의 텍스트 색깔과 바닥에 라인이 생기게 하기 위해서는
header nav li.on a:after  즉 네비게이터 on 클래스가 붙은 li의 a 태그 나오고 나서, 
content: ""; 가상요소를 넣어줘서 크기, 색상, 위치 지정해서 만들어 주자.




<3. 모바일 웹: 네이버 카페-본문영역>
1. 슬라이드 영역은 보통 position: absolute; 로 준다.

2. 이미지에 width: 100%; 주면 반응형이나 모바일에서 안정적이지만, 동시에 사진 크기 때문에
일부 깨질 수가 있다. 이럴때는 그 뒤에 amx-width: 최대너비크기px; 를 줘서 사이즈 제한을 주면 된다.

3. 카페 추가하기 부분은 해당 영역 모두가 클릭 했을 때 선택되어야 한다. 따라서 a 요소 안에 div 넣고,
그 안에 span과 em으로 텍스트 강조 해준다. 여기서 a요소는 인라인 요소 이지만 꾸며 주려면 
블럭 요소로 바꿔서 꾸면 주면 되고, HTML5 에서는 a요소 안에 블럭요소 들어 올수 잇어서
div가 들어 갈 수 있는 것이다.

4. :before, :after의 content: ""; 는 가상요소 이다. 여기에 백그라운드나 이미지를 주면 인라인 요소가
된다. 따라서 너비는 수정이 되지만, 높이는 블럭 요소로 바꾼 다음에만 수정 가능하다.
그리고 배경 이미지는 캡쳐 뜬 이미지의 절반 너비로 잡아야 한다. 가운데 정렬은 필수다.
예) background: url(../images/btn_arrow_up.png) no-repeat center / 16.5px auto; => 16.5픽셀은 
너비 33픽셀 이미지의 절반 너비다.

5. position: absolute; 주면 자동으로 블럭 요소가 된다. 따라서 여기에는 별도로 display: block; 를 
줘서 블럭 처리 할 필요 없다.

6. span은 인라인 요소이다. 그래서 같은 인라인 요소인 em은 들어가도 div는 블럭요소라서 못들어 간다.
예) <div><span>네이버 메인에 <em>#카페</em> 추가하기</span>이 페이지를 네이버 메인에서 바로 보세요.</div>

7. 모바일은 기계 마다 해상도가 다르기 때문에 패딩을 먼저 주고, 그 다음에 너비는 그냥 100%로
처리하는 것이 좋다. 높이는 직접 입력한다.

8. 내가입 카페 부분 처럼 텍스트 옆에 화살표 이미지를 주고 싶으면, 보통 해당 태그의 a요소에
가상요소를 줘서 거기에 이미지를 넣는다.  예를 들어 화살표 이미지가 텍스트 다음에 나오면
a태그에 :after 준 다음에 background: url() 준다. 그리고 a태그는 인라인 요소인데 단순히 여기서
불럭요소로 바꾸면 가상요소가 a태그 밑에 내려가 버린다. 따라서 인라인-블럭 처라 해줘야 한다.
그리고 화살표 이미지와 텍스트 사이에서 살짝 간격을 주고 싶으면 padding이 아니라 margin을
줘야 한다. 서로 다른 객체이기 때문이다.

9. display: table 은 테이블의 tr, td 같은 기능으로 테이블 효과를 주기 위한 기능이다.
예) 
.main .my_cafe > div {display: table; width: 100%; height: 161.5px;}  => 테이블의 tr 효과
.main .my_cafe > div >  div{display: table-cell; text-align: center; vertical-align: middle;}   => 테이블의 td효과
=> display: table; 주면 그 자식 태그는 display: table-cell; 이 와야 한다.



<4. 모바일 웹: 네이버 카페-footer 영역 및 마무리>
1. 모바일 사이트는 터치하기 좋아야 한다. 따라서 a태그 영역이 넓을 수록 좋다. 
li 안에 a태그에 너비와 높이를 준다.

2. 세로 정렬 방법 중에는 display: table; 이라는 것이 있다.  예를 들어
.main .my_cafe > div {display: table; width: 100%; height: 161.5px;}
.main .my_cafe > div >  div{display: table-cell; text-align: center; vertical-align: middle;}
이렇게 나오면 display: table; 은 tr, display: table-cell; 은 td가 된다. 
그리고 li 영역은 width:100%; 를 줘서 해당 영역을 꽉차게 해줘야 한다. 그래야 패딩 영역 빼고
화면에 꽉차게 된다. 그리고 li a에 vertical-align: middle; 을 주면 세로 가운데 이 된다. li a의
공통부모에 이렇게 주면 세로가운데 정렬 하는데 좋다. 그리고 vertical-align: middle; 을 
라인하이트 대신 주는 이유는 2줄 이상 세로 정렬할때 라인하이트는 사용 못하기 때문이다.

3. background에 right 주면 x축은 오른쪽, y축은 자동으로 세로 가운데, 즉 센터로 잡힌다.

4. 백그라운드 사이즈는 / 다음에 적는다. 예를 들어
background: url(../images/btn_head_arrow_right.png) no-repeat right / 9.5px 18px;
이렇게 적으면 백그라운드 사이즈가 9.5*18픽셀 크기가 된다. 물론 너비만 입력하고 높이에
auto 쓰면 자동으로 비율에 맟춰서 잡힌다.

5. 가상요소로 이미지를 넣기 위해서 :before 안에 content: ""; 만들고 background: url(이미지 경로); 를 통해서
이미지를 넣었다면, display: inline-block; 처리 해줘야 한다. 안그러면 블럭구조라서, 가상요소가 
해당 요소 밑으로 내려가 버리기 때문이다. 그리고 텍스트와 높이 차이 가 있으면  vertical-align: middle;
을 주면 된다. 다만, 경우에 따라 이래도 이미지와 텍스트 간에 세로 가운데 정렬이 안된다면, 
-2px 정도 주면 된다.

6. .main .cafe_list li strong 과 .main .cafe_list li strong.ico1:before의 background: url 이미지 사이에
간격을 주려면 .main .cafe_list li strong.ico1:before에 margin: 0 5px 0 0;을 주자. 패딩을 주면 간격이
아니라 가상 요소 자체가 늘어난다.

7. div에 display: flex; align-items: center; justify-content: center; 이렇게 주면 해당 div 안에 모든 요소가
가로,세로 가운데정렬이 된다.

8. footer의 div 안에 a태그 들은 그 너비가 각각 다르다. 따라서 각 요소 마다 너비를 주기 보다는
footer div a 에 먼저 높이만 주고, display: inline-block; 가로로 위치 시킨다음, 보더와 라인하이트
주면 가로 정렬이 된다. 그 다음에 한번에 마진과 패딩을 주면 된다. 그리고 각 a요소 사이에 공간이
2.5 픽셀이니까 좌우에 마진이 margin: 0 1.25px; 가 되어야 한다. 그러면 사이가 엄청 벌어진다.
그 이유는, a요소는 인라인이라 코드상 줄내림을 하게 되면 a요소 사이에 빈 공간 &nbsp;가 생기기 
때문이다. 이럴때는 footer div a 의 상위 태그인 footer div에 font-size: 0;을 주면 해결 된다.

9. footer p a:after 에 가상요소 줘서 바를 만들었는데 바가 겹쳐 보이거나 두껍게 보이는 경우,
이때는 footer p 이 부분에 font-size:0 하시면됩니다.
a요소는 인라인이라 코드상 줄내림을 하게 되면 a요소 사이에 빈 공간 &nbsp;가 생깁니다.
