<1. 오리엔테이션>
1. 최근 경향은 호환성 보다 최신기술을 이용하는 것이 중요하다.

2. codepen 가서 필요한 정보나 기술, 태그를 가져올 수 있다.

3. SVG 애니메이션, 레이어 팝업도 애니메이션으로 사용된다.

4. 나머지 기타 애니메이션 정보는 웹 표준 사이트 링크에서 CSS 부문의 애니메이션 파트에서 참고 할 것

5. background-image에 그라디언트를 줄 수 있다.



<2. bar 애니메이션>
1. 코드펜 사용방법: 코드펜 가서 로그인 -> 오른쪽 상단에 개인정보 메뉴 -> > 세팅 -> 
신텍스 하이라이팅은 MDN 으로 설정, 키 바인딩은 서브라임 텍스트로 설정, 에디터 옵션은 오토 컴플리트 체크, 
CSS Reset은 인클루드 리셋으로 설정 하고 세이브 -> 뉴 펜 -> 왼쪽 상단에 연필 눌러서 제목 작성 하고 엔터 
-> 여기서 작성하고 세이브 한 보드는 개인정보 메뉴의 대쉬보드 가면 언제든지 불러와서 볼 수 있다.

2. vh 치수는 px보다 반응형에 효과적이다. 어떤 브라우저나 Pc, 모바일에서든지 최적의 해상도에 맞춰서 구현된다.

3. background-image에는 이미지 뿐만 아니라 그라디언트도 들어간다.

4. animation 태그 사용법:
animation-name => 해당 애니메이션 이름
animation-duration => 작동할 시간+단위
animation-timing-function => 작동방식(예: ease-in-out은 천천히 움직이기 시작해서 점점 가속도가 붙다가 마지막에
느려지는 방식이다.)
animation-iteration-count => 애니메이션 전체 작동 횟수

이걸 한번에 작성 가능하다.
예) animation: bar 2s ease-in-out 100; => bar라는 애니메이션을 2초동안 ease-in-out 방식으로 100번 작동해라.

5. animation 태그 사용했으면 그 다음에는 키프라임을 작성해줘야 한다.
키프레임에서 %는 전체 동작 시간중에 단계를 의미한다. 따라서 단계는 여러 단계를 줄수도 있고 그냥 시작과
끝만 줄 수도 있다. 0%, 100% 만 주면 시작과 끝만 준 것이다. 움직임은 transform: 으로 주고 회전은 
rotate 속성을 준다. 

예) @keyframes bar {
	0% {transform: rotate(0);}
	25% {transform: rotate(0);}
	50% {transform: rotate(180deg);}
	100% {transform: rotate(180deg);}
	}
=> bar 애니메이션은 2초 동안 전체 동작 중에 0 ~ 25% 까지는 원점에 있고, 50% 까지는 180도 회전,
100% 에는 다시 180도 회전 하게 된다.



<3. Dot 애니메이션>
1. 기본 동작 구조는 간단하다. 앞선 bar 돌리기 하는데 그 양 끝 쪽에 작은 원을 넣고 돌리면 된다.
그 다음 bar만 안보이게 감추면 된다. 그럼 원만 돌아가는것 같이 보이게 된다.

2. 자신이 원하는 색상을 웹 표준 사이트 -> design -> @menu view -> color 에서 원하는 사이트 들어가면
그라디언트 색상 조합을 선택 가능하다. 여기서는 webgradients.com에서 찾아본다. -> 원하는 색상을 선택
-> copy css 누른 background-image 태그에 붙여넣기 하면 된다.



<4. wave 애니메이션>
1. 앞으로 대세는 float 사용해서 정렬하는 것보다, flex 이용해서 정렬하는 추세가 온다. 
반응형에는 flex 가 더 적합하고 적용이 잘된다. (%로 먹힘)

2. flex로 객체를 가운데 오게 하려면, 상위 태그에 display: flex, align-items: center, justify-content: center 
를 줘야 한다.  align-items 은 상/하, justify-content는 좌/우 조절 한다. center 말고 flex-start, flex-end
등 다양한 조건을 줘서 이동 가능하다. 

3. position으로 중앙에 오게 하면 문제가 있는데, 위치 이동시 그 영역이 사라지기 때문에 백그라운드 컬러가 
먹히지 않는다. 그래서 플렉스 사용한다.

4. animation: infinite 라고 주면 동작 횟수가 무한이 된다.



<5. Cube 애니메이션>
1. transform 의  속성 태그 중에 rotate, rotateX,Y,Z 들은 단위가 deg, translate, translateX,Y,Z는 단위가 px,
scale, scaleX,Y,Z는 단위가 그냥 숫자이다.  그리고 각 X,Y,Z는 대/소문자 구분 없다.

2. 큐브의 좌,우에서 늘어나는 측면은, translate 가 아니라 scale 을 줘야 한다.

3. 3D 모양은 반드시 움직임의 기준이 되는 원근점이 있어야 한다.
perspective -> 3d 효과를 주는 원근점, 기준점, 상위 태그에 쓴다.
transform-style: preserve-3d -> 3d의 객체에게 3d 효과를 주려면 이걸 줘야 한다.



<6. Tail 애니메이션>
1. nth-of-type() -> 자식 태그 중에서 해당 유형과 같은 것만 적용된다.

2. animation: alternative -> 애니메이션 동작이 앞,뒤로 움직이는 속성이다. 즉, 동작을 시작해서
끝가지 갔다가 다시 시작 동작으로 돌아오는 효과이다.  infinite 속성은 동작을 시작해서 끝까지
간다음, 시작부터 다시 시작해서 무한반복이지만, alternative는 시작에서 끝까지 갔다가 다시 끝에서 시작
으로 되돌아가는 차이가 있다.
 