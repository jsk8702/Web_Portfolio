<1. 한솔 홈 데코 반응형 실무 사이트 - psd 없이 사이트 만들기 준비>
1. 모델 주소는 http://www.hansolhomedeco.com/home/ 이곳이며,
국내 우수 웹 사이트를 모아놓은 디비컷(https://www.dbcut.com/)에서 선택했다.
만들어 볼 사이트는 최신 사이트, 컨탠츠 양이 많은 것이 좋다. 그래야 포트폴리오와
사이트 제작에 실력이 향상된다.
깃허브 주소: https://jsk8702.github.io/Web_Portfolio/web_sort/web_responsive/hansol/index07.html

2. 사이트 전체 캡쳐와 슬라이드 이미지 캡쳐 프로그램 두개를 사용해서 사이트 전체 사진과
해당 사이트에 모든 이미지를 다운 받을 것이다. 구글 앱 스토어에서 Full Page Screen Capture,
image downloader 검색해서 맨 위에 인긴 많은거 다운 받아서 설치한다. 그리고 한솔 홈 데코
사이트에 들어가서 맨 상단에 간다음에 각 앱을 실행해서 사이트 이미지를 캡쳐한다.
이미지 다운로더는 사용을 잘해야 하는데, 이미지 다운로더 누르고, 셀렉트 올 선택한 다음에,
다운로드 누르면 각 이미지 갯수 만큼 다운로드 창이 떠버린다. 이럼 낭패다.
구글 설정 들어가서 고급 -> 하단에 다운로드 란 -> 다운로드 전에 저장 위치 확인을 해제 -> 
그 다음에 이미지 다운로드 가서 이미지 모두 선택하고 다운로드 눌러서 다운 받으면 된다.
다운 받은 다음에 do파일은 필요 없으니 삭제하면 된다. do파일은 어도비 리더기 설치 해야 읽을 수
있는 파일이다. 다른 이름으로 받기 해서 확장자만 jpg, png 등으로 바꿔서 저장하면
일반 이미지 파일로 저장 가능하다.

3. 아이콘 이미지는 이미지 스프라이트 기능으로 간다.



<2. 한솔 홈 데코 반응형 실무 사이트 - 메인페이지 헤더영역>
1. 웹 접근성을 위해서 본문 바로가기 메뉴를 만든다. a태그로 만든다.

2. 로고는 배경 이미지로 한다. 근데 배경 이미지도 웹 접근성에 따라 장애인을 위해서 
이미지 대신 읽을 수 있는 대체텍스트가 필요하다. 배경 이미지는 alt 사용 할 수 없기 때문에
대체 텍스트는 꼭 필요하다.

3. 웹 컨텐츠 기준에 따라, 모든 컨텐츠에는 제목이 필요하다. 물론 다 숨길꺼다.

4. 리셋용 css는 html5용으로 한다.

5. 처음에 메뉴를 포지션으로 왼쪽, 오른쪽 나누면, 사실 헤더 자체에 패딩으로 좌우 50픽셀
주는 것은 무의미 하다. 그냥 text-align: center; 나 주자.

6. 제목인데 읽을 필요 없는 경우, 단순히 디스플레이를 none 처리해서 안보이게 하면,
웹 접근성에 다른 시각장애인들이 웹 리더기로 읽을 때 읽을 수 없게 된다.
따라서 이건 포지션으로 그냥 화면에서만 보이지 않는 구석 멀리로 보내버리는게 좋다.
예) header h2 {position: absolute; left: -5000px;}
=> 제목이 존재는 하지만 포커스 맞추기 전에는 보이지 않는다.

7. 상위태그에 text-align: center; 가 있으면 하위 태그에는 float 가 먹히지 않는다.
이럴 때는 display: inline-block; 써주면 가로 정렬 된다. 그런데 인라인 블럭에는 문제가
하나 있다. 인라인 요소 끼리 줄을 내리면 스페이스 1개 만큼의 공간이 생긴다. 그래서
인라인 끼리 있으면 살짝 공간이 생긴다.

8. h1 a 제목 텍스트에 color: transparent; 라고 쓰면, 배경색을 따라서 흰색이 되고, 텍스트가 안보이게 된다.

9. 로고 이미지는 ir이미지로 이미지 스프라이트 기법으로 가져온다.

10. header .lnb li 에서 각 li 사이에 패딩을 주는데, 70픽셀이 필요하다면, 좌우로 35픽셀 씩 
나누어서 주는 것이 좋다. 만약 한쪽으로 주면, 센터에서 반대쪽으로 전체가 밀려나게 된다.
따라서 li a에 패딩을 상하 좌우로 넉넉히 주는 것이 좋다. a태그의 높이는 주고, 패딩은
좌우 35만 주면 패딩으로 위까지 줄 필요는 없다. 물론 이건 각 li 사이에 간격이 같을 때
이야기 이다. 만약 다르다면, 한쪽 패딩에서 텍스트 끝까지 잡은 다음에, 그것의 절반을 
좌우 패딩값으로 주는 방식 등으로 다르게 줘야 한다.

11. 텍스트 색깔은 가장 진한 색을 찾아서 그거 기준으로 해야 한다.

12. 텍스트 한줄 일때는 line-height를 높이랑 똑같이 주면 세로 가운데로 온다. 그리고 구글 검사로
패이지 볼때 해당 영역에 파란색으로 뜨는 것은 해당 영역이고, 녹색은 패딩이다. 
header .lnb li a 의 경우, 좌,우는 패딩을 줘서 간격을 가졌고, 이미 자체 높이 값을 준 상태이며,
라인 하이트로 세로 가운데 맞춤이 된 상태에서, 위,아래 패딩을 주면 라인 하이트가 흐트러 진다.
따라서 이럴 때는 그냥 위, 아래 패딩을 안주는 것이 좋다.

13. header .spot li 사이에 바를 만들어 줄 껀데, after 가상요소로 만들어 준다.
중요한 점은, 이미 header .spot li a 의 높이가 81 픽셀로 헤더를 꽉 채우고 있다는 점이다.
당연히 세로 가운데 맞춤으로 되어 있다. 따라서 가상요소 바는 포지션 주고, top: 50%;
transform: translateY(-50%); 줘서 해당 영역의 세로 중간에 오게 하면 자동으로 텍스트 라인과
만나서 세로 가운데 정렬이 된다.

14. header .lnb li a:hover 에 마우스 올리면 색이 변하고 밑줄이 생긴다. 밑줄은 텍스트 데코레이션도
있지만, 그건 텍스트에 붙어서 나온다. 간격을 조절 할 수 없다. 여기서는 어느 정도 떨어져 있으므로, 
가상요소로 만들어 준다. 그리고 포지션으로 정해주면 된다. 문제는 이렇게 하면 header .lnb li a 에 기준을 주고, 
header .lnb li a:after 에 position: absolute; 를 주면 제대로 a태그 전체 너비 만큼 라인이 증가한다.
글씨 체 만큼만 라인이 생기게 하고 싶다면 낭패다. 따라서, 
<li><a href="#a"><span>제품정보</span></a></li> 이런 식으로 중간에 span을 주고,
header .lnb li a span {position: relative;} 거기에 기준을 준다음에 
header .lnb li a:hover span:after => 이렇게 span:after 에 position: absolute;를 주면
텍스트 너비 만큼 bottom에 라인이 생긴다.

15. 스타일 속성에 순서를 주는 것은 개인 스타일이다. 무엇을 먼저 넣어 주던지 상관 없다.



<3. 한솔 홈 데코 반응형 실무 사이트 - 비주얼 영역 제작하기>
1. 슬라이더 부분과 헤더 서브 페이지 제작한다. 슬라이더 움직이는 것은 자바 스크립트나
제이 쿼리로 개인적으로 해보면 된다. 슬라이드 부분은 섹션으로 한다.
섹션은 영역구분하는 의미도 있다. 따라서 섹션으로 파트를 나눴으면, 해당 섹션에는
클래스나 아이디를 반드시 써준다.

2. 기본적으로 웹 접근성에 의한 장애인 사용 친화적인 인터페이스 구현을 위해서, 슬라이더 컨트롤러
를 먼저 구현하고, 그 다음에 슬라이더 컨탠츠를 만들어 본다.

3. 슬라이더 하단에 다음 화면으로 이동하는 바는 ul li a태그로 만드는데, 텍스트가 없다고 비어 있는
태그로 만들면 안된다. 따라서 텍스트 내용이 들어가야 하는데, 보통 여기에는 그냥 순서이름만
넣는다. 그러나 그러면 장애인들이 힘들어 한다. 무슨 내용인지 모르기 때문이다. 그러므로
보통 이렇게 순서 바에 텍스트 넣을 때는 해당 슬라이드의 기본 정보를 적어 주는 것이
웹 접근성에 부합한다.

4. .visual .con .slide{background: url(../img/bg_main02.jpg) no-repeat center;}
=> 이렇게 하면 사진이 반복되지 않고 해당 구역의 중앙에 오는데, 화면 크기가 늘어나거나
줄어들어도 정 중앙에 오게 된다.

5. a태그에 포지션 주고 이동 시킬 때는 인라인 요소라서 가로,세로 요소가 들어가지 않으므로, 
display: block; 꼭 해준다.

6. 이미지 스프라이트로 이미지 가져와서 원하는 위치에 이동시키기:
.visual {position: relative; padding: 0 50px;} 
=> 이미지의 포지션 기준이 되는 영역을 선정한다.
.visual .prev,
.visual .next {
    display: block; 
    position: absolute; 
    left: px; 
    top: 50%; 
    width: 25px; 
    height: 47px; 
    transform: translateY(-50%);
    background: url(../img/sp_com.png) no-repeat;
    color: transparent;
} => 이미지들의 공통요소를 작성한다. 여기서는 화살표가 방향만 다르고 크기,너비 등이 같으니까 여기서 
설정해주고, 기본적으로 가져올 이미지 스프라이트 위치를 background: url(../img/sp_com.png) no-repeat;
여기로 가져온다.
.visual .prev {left: 82px; background-position: -128px -60px;}
=> 왼쪽 화살표 이미지 위치를 left로 지정하고, 이미지 스프라이트 상에서 가져올 위치는 
background-position 으로 선정해준다.
.visual .next {right: 82px; background-position: -158px -60px;}
=> 오른쪽 화살표 이미지 위치를 right로 지정하고, 이미지 스프라이트 상에서 가져올 위치는 
background-position 으로 선정해준다.

7. color: transparent; 하면 해당 텍스트는 색상이 투명색상으로 바뀌어서 안보이게 된다.

8. 슬라이드 안에 슬라이드 바와 시작, 정지 버튼은 하나의 div로 묶어서, 포지션으로 오른쪽에 
이동시키고 패딩을 준 다음, 나머지 바 들은 가운데 정렬 시킨다. div로 한번 더 묶는 이유는 그래야 포지션의
기준을 줄 수 있기 때문이다.

9. .visual .control {position: absolute; left: 0; bottom: 55px; width: 100%; text-align: center;}
=> 여기서 width: 100%를 준 이유는, position: absolute; 때문에 text-align: center; 을 줘도 하단에 
.visual .control ul,
.visual .control li{display: inline-block;}
이렇게 2개가 가운데 정렬이 안되기 때문이다. 그럴 때는 width: 100%주면 된다.

10. 인라인 구조끼리 한줄 처리로 줄내림을 하면, 즉 가로 정렬되면 인라인 요소 사이에 공간이 생긴다.
.visual .control ul,
.visual .control li {display: inline-block;}
=> 그럴 때는 2가지 방법이 있다. 하나는 인덱스 html에서 li 들을 일직선으로 코딩하는 것이다.
<ul>
      <li class="on"><a href="#a">홈데코 비전</a></li><li><a href="#a">한솔 신상품</a></li><li><a href="#a">설명텍스트3</a></li><li><a href="#a">설명텍스트4</a></li><li><a href="#a">설명텍스트5</a></li>
</ul>
이렇게 되면, 인라인 구조 사이에 #nbsp 여백이 사라진다.
두번째 방법은 그냥 상위 태그인 .visual .control ul 에 폰트 사이즈 0을 주면 된다.

11. 인라인 구조에 좌,우 크기를 주고, 가로 정렬까지 하고 싶으면 블럭 보다 인라인 블럭 이 좋다.
만약 텍스트가 있으면 이렇게 했을 때 너비나 높이보다 텍스트가 길다면 위 아래로 떨어진다.
이럴때는 가로 세로를 지정해 줬다면, overflow: hidden; 을 줘서 텍스트가 경계를 넘어가면 생략
되게 한다. 그러면 원래 의도한바 대로 가로 정렬이 된다.

12. 슬라이드 바와 슬라이드 버튼 사이에 높이 간격이 있다면, 슬라이드 바에다 포지션과 탑을 주면 된다.
.visual .control ul {position: relative; top: -7px; display: inline-block; font-size: 0;}
=> 이렇게 주면 슬라이드 버튼이 움직이는 게 아니라 슬라이드 바가 위로 상대적으로 올라가서 
가로 맞춤이 된다.

13. 시작과 일시 정지 버튼도 슬라이드 바 같이 현재 성택된 상태를 나타내는 클래스 주고 
효과를 주면 된다.

14. 슬라이드 텍스트의 left 위치는 왼쪽 끝에서 962px이다. 근데 전체 이미지 상에서 보면
딱 절반에 와 있는 것이다. 이걸 left: 50%; 라고 해도 같은 소리이지만, 50%로 하면
화면 비율이 달라져도 가운데 정렬 같이 유동적으로 해당 위치로 움직인다.

15. body {min-width: 1280px;} 이렇게 해주면 화면 너비가 1280픽셀로 줄었을 때 가로 스크롤이 생긴다.
여기서는 반응형 대신에 그냥 스크롤이 나오게 해보겠다.
그리고 화면을 줄이면 헤더 메뉴 중에 .lnb 와 .spot 이 서로 겹치는 문제가 있다. 이건 기준이 어디냐
에 따른 문제이다. 이럴 때는 헤더를 기준으로 잡아 주면 된다. 헤더에 position: relative; 넣으면
화면 줄여였을 때 위치가 절대적으로 바뀌어서 서로 겹치지 않는다.




<4. 한솔 홈 데코 반응형 실무 사이트 - 컨탠츠 영역 제작하기_제품정보>
1. 제품 목록의 이미지 사이즈 결정 할 때는 가장 큰 이미지 사이즈 기준으로 사이즈 를 정해야 다른
이미지 들도 모두 포함된다. 목록을 보면 하나의 a요소 칸 안에 이미지가 있고 텍스트가 그 밑에 있다.
그리고 둘다 클릭이 되어야 한다. 만약 따로 만들면 클릭 영역을 설정하는데 문제가 있다.
따라서 여기서는 a요소에 텍스트를 넣고, before를 줘서 그 가상요소에 이미지를 넣도록 한다.

2. 이미지는 nth-child 로 넣어보겠다. 그리고 .product a 에 백그라운드로 이미지를 넣는데,
.product a:before 에 넣는다. 가상요소에 넣으면 가상의 인라인 요소가 되므로,
.product a:before {content: ""; background: url(../img/sp_com.png) no-repeat;} 이렇게만 넣으면
당연히 아무런 이미지도 보이지 않게된다. 이럴때는 역시 블럭 처리 하고, 가로 세로 값을 넣어줘야 한다.

3. 이미지 스프라이트 상에서 원하는 이미지 위치를 선택하는 방법:
이미지를 기준으로 가상의 정사각형 테두리를 씌우고 이미지 원점 0,0(왼쪽 상단 끝)에서 부터
해당 이미지 정사각형 테두리 왼쪽 끝에 닫는 부분을 찾아 낸다. 만약 내가 입력할 이미지 사이즈가
40*40 이고, 이미지 테두리의 왼쪽 끝이 스프라이트 원점에서 width: 120px, height: 50px 에서 찾아 진다면,
거기서 부터 40*40 사이즈 의 이미지를 가져오는 것이다.
참고로 스프라이트 원점에서 오른쪽으로 가면 +값이고, 아래로 내려가면 -값이다.
여기서는 이미지 사이즈를 64*52로 맞추었고, 포토샵에서 먼저 64*52 로 사각형 선택 윤곽을 써서 이미지에
가운데 오게 씌우고 거기서 스프라이트 왼쪽 끝에서 맞춰봐야 한다. 높이는 똑같은 라인에 있어서 같게
나오고, 너비만 맞춰보면 된다. 물론 앞서 말한것 같이 선택 윤곽은 이미지 중에서 가장 큰 것 중심으로
잡은 값이 64*52다. 
그런데 문제는, 그렇게 하면, 아마 첫번째 이미지는 오른쪽 끝 부분이 짤린다. 왜냐면, 해당 이미지 입장에서는
스프라이트 이미지 왼쪽 끝에 붙어 있는 것이 아니기 때문이다. 첫번째 이미지는 스프라이트 이미지 왼쪽 끝에서 
3픽셀 정도 떨어져 있으니까, 해당 이미지 입장에서는 스프라이트에서 width값이 왼쪽으로 이동해야 되니까
-3px을 줘야 한다.

4. 메뉴에 가운데 정렬을 하기 위해서는 사이트 이미지 상에 보이는 간격을 한쪽에 패딩으로 몰아 주면
안된다. 그러면 가로 가운데 정렬 해도 한쪽으로 쏠린다. 패딩을 양쪽에 똑같이 분배해서 줘야 한다.
그리고 우리가 가져온 이미지의 영역에서 가상의 테두리를 씌워서 가져 왔기 때문에 그걸 감안하고
그 다음에 이미지 사이에 간격을 재서 2로 나누고 그 값을 양쪽 패딩에 줘야 하는 것이다.
그리고 li에 float, 좌-우패딩, 텍스트 얼라인 센터 주고 ul에 전체 메뉴 너비, 상-하패딩, 마진 0 오토를 준다.
ul의 전체 너비는 구글 검사에서 해당 아이콘 주변에 대면 아이콘 한개의 li가 이미지와 패딩 좌우 합쳐서
174픽셀이 나온다. 아이콘은 6개니까 174*6 하면 1044가 된다. 그것이 ul의 너비가 된다.

5. 이렇게 하면 되지만, 만약 리스트가 추가되면 바로 밑에 붙어버린다. 이럴 때는 리스트가 추가되거나
줄어 들어도 유동적으로 가로 정렬이 되어야 한다. 이럴 때는 가로 너비나, float를 쓰면 안된다.
ul 에서 너비 사이즈, 마진 0 오토도 빼고 텍스트 얼라인 센터 준다. 그렇게 하면 li는 가운데 정렬이 안되는데
li에 float 지우고 인라인 블럭을 주는 것이다.
즉, 자식 태그에 인라인 블럭을 주고, 부모 태그에 텍스트 얼라인 센터를 주면 가로 가운대 정렬이 된다.
인라인 블럭을 주면, 해당 요소가 인라인 요소 처럼 좌,우로 정렬이 가능 하지만 동시에 블럭 구조
같이 상,하,좌,우 마진, 패딩도 줄수 있는 것이다. 그리고 이렇게 li a 요소 들이 코딩 상에서 줄 내림으로
가로 정렬 하면 인라인 요소 사이에 공백이 생긴다. 이건 li의 부모 요소인 ul에 폰트-사이즈 0을 주면
해결 된다.

6. 메뉴의 아이콘과 텍스트 사이에 공간을 주고 싶으면, 마진을 써야 한다. 아이콘은 가상 요소이고,
텍스트는 가상 요소의 원본 이기 때문이다. 따라서 가상 요소에서 마진 을 아래쪽에 줘서 텍스트를
밀어내야 한다. 패딩으로 주면 아이콘만 늘어난다.






<5. 한솔 홈 데코 반응형 실무 사이트 - 컨탠츠 영역 제작하기_메거진영역>
1. 메거진 영역 만들고 그 안에 슬라이드 영역이 들어 간다. 기존에 비주얼 영역에서 사용했던
버튼 들을 재활용 한다. 그러기 위해서 기존에 비주얼 버튼과 컨트롤 부분에 클래스 이름을
슬라이드라고 바꿔 주고 인덱스 파일의 비주얼 영역에 클래스 이름으로 슬라이드를 추가해 준다.
그러면 비주얼은 비주얼 대로 쓰고 슬라이드는 슬라이드 대로 쓸 수 있게 된다.
따라서 슬라이드 css 코딩 부분은 따로 때서 하단에 공용으로 만들고, html 코딩 부분에서
기존에 슬라이드 부분을 복사해서 메거진 영역에 집어 넣자. 

2. css 요소는 관리자 모드에서 관리하지 못한다. 사용자가 직접 올리는 부분이디 때문이다. 
그래서 우측에 사진 목록은 ul li 안에 백그라운드 이미지를 사용할 수 없다. 
img 요소로 이미지를 넣어야 한다. 그리고 해당 목록의 사진은 옆에 사진을 설명하는 텍스트가
있으므로 이런 경우에는 굳이 해당 img 안에 alt의 대체 텍스트를 작성할 필요 없다.

3. 텍스트가 한 줄일때 라인 하이트100% 주면 오버된 여백을 제거하고 좀더 정확하게 위치를
잡아준다. 반드시 글씨에 높이만큼 줄어드는 것은 아니지만 거의 근사하게 줄어서 불필요한
여백을 제거해 준다.

4. 이미지 크기를 줄여 줄때는, 너비를 수정하고 오버플로우 히든을 줘서 넘치는 부분은 제거하는
방법이 가장 좋다. 이미지 크기 수정에서 보통 너비만 100% 준다. 그러면 나머지는 자동으로 잡아준다.
너비, 높이 둘다 100% 하면 사진이 눌리거나 늘어나는 현상 때문에 비추한다.

5. 줄 간격=line-height를 알아내는 방법은, 예를 들어 2줄 텍스트가 있으면, 첫번째 줄 텍스트 위에서 
두번째 줄 텍스트 바로 위까지가 줄간격이다. 만약 포토샵에서 이 부분이 16픽셀로 나오면, 해당 텍스트
는 line-height: 16px; 가 되는 것이다. 그리고 줄 간격은 텍스트 중심을 기준으로 상-하로 나뉜다.
따라서 16픽셀 텍스트의 줄 간격은 텍스트 중심에서 위로 8픽셀, 아래로 8픽셀 인 것이다.

6. 텍스트에 줄 간격이 있는데 패딩이나 마진을 주면, 텍스트 에서 텍스트 까지가 아니라, 텍스트에서
줄 간격 위에 까지만 온다. 

7. 자세히 보기 버튼은 상단에 텍스트가 길던 짧던 위치가 고정이어야 한다. 포지션으로 absolute 주고
right, bottom 값으로 고정시켜 준다.

8. 오른쪽 목록에 텍스트가 세로정렬로 왼쪽 이미지의 가운데 높이에 와야 한다. 문제는 제목이 길어지
거나 내용이 많아 지면 패딩을 줬을 때 칸이 늘어나서 어긋나 버린다. 따라서 css3에서는 
display: flex와 table 효과로 세로 가운데 정렬이 가능하다. 여기서는 table 효과로 세로 정렬 해본다.

9. html5에서는 인라인 요소 안에 블럭요소 로 올수 있는 것 중 하나가 div다.

10. 여기서는 display: table을 사용한다. 이걸로 세로 가운데 정렬을 한다.
.magazine .slide_box .right li a 가 테이블 요소에서 tr,
.magazine .slide_box .right li a div 가 테이블 요소에서 td 가 된다.

11. 메거진의 양쪽에 이전, 다음 화살표 버튼은 화면 양쪽 끝에서 부터 기준 잡은 것이 아니라 화면 중앙에서
-값으로 이동한 것이다. 화면 양쪽 끝에서 잡으면 해상도가 큰 화면서 볼 대 화살표가 점점 중앙에서 멀어지기 때문이다.







<6. 한솔 홈 데코 반응형 실무 사이트 - 컨탠츠 영역 제작하기_배너영역>
1. 제품 찾기 밑에 검색과 입력부분은 ul > li 로 해도 되지만, 시각장애인 들이 이 사이트를 사용하면
ul > li 의 목록이 많을 경우 탐색 하는 소리가 너무 많이 나서 힘들어 한다. 그냥 div로 한다.

2. 셀렉트의 옵션에 제품 전체 값을 모두 넣는 경우가 있는데, 그럴 필요 없다. 어짜피 백엔드 개발자가
디비로 원하는 값을 모두 자동으로 들어가게 하기 때문에 기본 요소만 넣어주면 된다.
그리고 여기서는 인풋타입을 서치로 한다. 텍스트 말고 서치다.

3. input에 placeholder를 입력했다고 해서 웹 접근성이 준수되지는 않는다. 타이틀을 입력해 줘야 
웹 접근성을 준수하는 것이다.

4. 제품전체검색 = 셀렉트, 모델명 입력 = 인풋타입 부분에 보더 끝이 둥근 이유는 
reset05.css의 30번, 42번 라인의 border-radius: 5px; 때문이다. 이미지 같이 직각으로 하려면 이부분 없애주면 된다.

5. 플레이스홀더 위치 조절 하려면 reset05.css 에서 input::-webkit-input-placeholder 복사한 다음, 기존 input에다
붙여서 .notice > div .top > div input::-webkit-input-placeholder 이렇게 한 다음에 text-indent: 20px; 이런 식으로
텍스트 위치 조절해 주면 된다.

6. .notice > div .top > div a => a요소는 인라인 요소 이지만 꾸며주기 위해서 display: block 하면, 
해당 영역 너비를 모두 소유하게 되므로, 굳이 너비 100% 는 주지 않아도 된다.

7. background-image에는 no-repeat이 들어가지 못한다. 그리고 background와 background-image를 같이 주면
background-image가 우선시 되어서 먼저 올라온다.

8. hover 효과는 마우스를 대상에게 올렸을 때 효과 발생하고, transition은 특정 마우스 이벤트에서 발생한다.
따라서 hover의 효과가 transition을 통해서 발생한다면, hover에는 어떻게 동작할지만 넣어줘야 한다.
어떻게 디자인 할 지는 여기에 넣으면 안된다. 따라서 호버에는 어떻게 동작 할지만 넣고, 호버 전 단계에
트랜짓션과 디자인 효과를 모두 넣어야 한다.




<7. 한솔 홈 데코 반응형 실무 사이트 - 컨탠츠 영역 제작하기_공지영역>
1. notice 섹션 안에 div 안에 article 로 공지사항을 만든다.

2. 높이 많큼 border-radius 값을 주면 원이 된다.

3. 더보기 이미지로 스프라이트 이미지로 가져온 다음에 흰색 배경 안에 넣기 위해서는
구글 개발자 도구로 직접 플러스 이미지를 원에서 중앙으로 이동시키면서 위치를 잡아준 다음에
그 값을 백그라운드의 x,y축 값으로 넣어줘야 한다.

4.  뉴스 란은 가로로 나뉘어져 있다. 그런데 1줄 이라면, 굳이 패딩을 안줘도 전체 높이를 주고 라인하이트와
text-indent를 줘서 마치 패딩이 있는 것처럼 보여줄 수 있다.
.notice article > div.right ul li a {display: block; height: 60px; line-height: 60px; text-indent: 30px;}

5. 한줄 줄임은 다 되지만, 두줄 줄임은 익스플로어에서 적용 안된다.  





<8. 한솔 홈 데코 반응형 실무 사이트 - 컨탠츠 영역 제작하기_하단 배너 및 푸터영역>
1. 컨탠츠의 제목은 반드시 필요하다. 그리고 기획자와 상의해서 작성 해야 한다.

2. 주소나 약관 같은 종류의 글은 해당 사이트에서 혹은 부여 받은 PSD에서 긁어 오는 것이 정석이다.
만약 직접 타이핑 해서 오타 있으면 책임 소재가 생기기 때문이다.

3. 배너에 li 들은, 만약에 배너 광고가 계속 변하는 것이라면, 각 클래스를 줘서 그때마다 이미지를
바꿔줘야 한다. 하지만 그냥 배너 전체가 하나로 고정되어 가는 거라면, 그냥 nth-child 로 줘도 된다.
여기서는 nth-child 로 해주겠다.

4. 배너에서 주요 li의 위치를 패딩-탑으로 줘서 내리면, 전체 사이즈가 증가한다. 패딩과 전체 사이즈가 
충돌해서 그런 것인데, 박스 사이징-보더 박스로 해결하면 된다.

5. 푸터 탑 안에는 좌우 메뉴 정렬의 기준이 될 div가 한게 필요하다.

6. footer의 위쪽 메뉴를 세로 가운데 정렬 할때는, 위 아래 패딩 주는 것보다, 줄 간격으로 주는 것이
좋다. 그냥 패딩으로 주면 텍스크 좌우가 서로 다른 크기 이므로 가운데 맞춰진것 같지가 않아 보이기
때문이다. 서로 크기가 다른 이미지 간에 세로 가운데 맞춤 하려면 줄간격 기준으로 맞춰주는 것이 좋다.
줄 간격 기준은 홈데코 사이트 전체 이미지에서 고객상담 부분에 백그라운드 영역이 높이 45픽셀 이니까
해당 우측의 상단 메뉴에 line-height: 45px 주면, 좌우가 가운데 온것 처럼 보이게 된다. 즉 기준은 우측
메뉴의 45픽셀 가운데 영역인 것이다. 간단하게 생각하면, 메뉴가 왼쪽 정렬이나 오른쪽 정렬이면 패딩을
오른쪽이나 왼쪽에 주고, 메뉴가 가운데 정렬이면, 패딩을 좌우에 나눠서 줘야 된다.

7. 푸터 상단 메뉴 li에 오른쪽에 19픽셀로 패딩을 준다. 이미지 보면 맨 오른쪽 끝이 상단 라인과 맞춤
이기 때문이다.  그리고 패딩을 a가 아니라 li에 준 이유는, 각 li 사이 간격은 클릭이 되면 안되기 때문이다.
li 영역은 클릭이 되지 않는다. a요소만 클릭이 된다.

8. 메뉴의 가상 바 마지막 li에는 안나오게 하려면 라사트 차일드:에프터에서 그냥 display:none; 해주면 된다.

9. a요소에 텍스트 색깔은 직접 a요소에 줘야지 적용된다. 상위 li에 줘도 적용 안된다.