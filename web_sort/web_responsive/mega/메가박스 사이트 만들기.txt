<1강. 기본세팅>
1.  작업 할때 1280, 768, 360@2 버전 psd 파일 여러놓고 하면 된다. 그거 켜놓고 한다. 이번에는 브라켓으로 
닷홈에 올려서 한다.

2. mega 라는 폴더 만들고 여기서 작업한다. 시넵스 연결해서 만들것.

3. lang="ko" 로 해주면 한글로 언어분석 하는데 더 빠르다. 안해줘도 인식은 한다.

4. 최근에는 모두 UTF-8 로 쓴다.

5. 메타 속성:
<meta name="viewport"> 피시화면의 비율을 줄여서 모바일에서도 보여줄수 있다. 반응형이라면
반드시 넣어줘야 하는 속성이다. 

<meta name="viewport" content="user-scalable=no> 유저가 화면 누르면 확대되서 커지는 기능을 제거하는 속성이다. 이번에는 이런 속성을 추가했다.

<meta http-equiv="X-UA-Compatible" content="ie=edge"> 익스플로러가 가장 최신 버전인
엣지 기준으로 해석하라는 속성인데, 최근에는 다들 최신 버전이고, 크롬 쓰기 때문에 거의 죽은 소스다.
호환성을 위해 일부 포털 사이트에서 사용하며 모바일 사이트라면 필요없다.

<페이스북, 트위커 메타태그> 다른 사람이 내 사이트를 링크 걸거나 퍼갈때 기본정보를 제공하는 기능이다.

<!-- HTLM5shiv ie6~8 --> 익스플로어9 이하 버전에서 시멘틱 태그를 인식 시켜주기 위해 사용한다.
조건부 주석표시로, 익스9 이하 버전일 경우에만 작동한다.
<!-- HTLM5shiv ie6~8 -->
    <!--[if lt IE 9]> 
      <script src="assets/js/html5shiv.min.js"></script>
      <script type="text/javascript">
         alert("현재 브라우저는 지원하지 않습니다. 크롬 브라우저를 추천합니다.!");
      </script>
   <![endif]-->
이건 생략문이 아니라 원래 이렇게 쓰는 방법이다. 절대 생략문 아니니까 주석표시 지우지 말것.

6. 사이트 작업하다가 모르거나 애매한 것은 네이버나 다음 사이트를 기준으로 잡으면 좋다.

7. <script src="assets/js/modernizr-custom.js"></script> 이거는 사용자 브라우저의 HTML5, CSS3 기능들을 감지하고
지원여부를 판별하는 자바스크립트 라이브러리이다.

8. 다운 받은 소스파일을 파일질라로 각 서버 폴더에 집어넣자. 그리고 사이트 갱신 하고, 페이지 소스 보기 해서 css, js 파일 모두 제대로 링크 되는지
확인한다. 그리고 검사 들어가서 엘리먼트에서 HTML 도입부에 해당 사이트에 적용되는 기능들 뜨는지 확인한다. 나오면 모더나이즈 적용된거다.
그리고 마지막으로 HTML, CSS 검사하기 추가한거 눌러서 검사해주고 경고 말고 오류 안뜨면 성공한거다.




<2강. 헤더영역>
1. 제일 큰 태그는 시멘틱 태그로 쓴다. 그래서 헤더를 만들어 주고 아이디로 헤더라고 만들어 준다. 그 안에 컨테이너 들어가고
거기서 row 라고 잡아주고 그 안에 헤더 클래스가 온다. 사이트 메인로고는 h1태그로 해준다. 안에 a태그 넣어서 링크한다.
로우 클래스는 메가박스 사이트 상단에 헤더 부분을 의미하고 그 안에 메인 로고와 메뉴가 있어서 그렇게 넣어준 것이다.
메뉴는 nav 태그로 한다. nav  태그는 보통 한번만 쓴다. 사이드 메뉴가 있으면 또 사용 가능하긴 하다.

2. 메인 로고 이미지는 em -> img 태그로 해주고, 서브 로고 이미지는 strong -> img 태그로 해준다. 그리고 이미지 태그 사용하면 반드시 Alt 써준다.

3. 메인 메뉴 만들고 끝남 표시해주자. 퍼블리셔는 소스가 깔끔해야 실력 인정 받는다.

4. css 파일이나 js파일에 @charset "utf-8"; 넣어주자. 그럼 소스 보기 했을때 한글이 깨지지 않는다. "" 로 해줄것.

5. reset.css 파일 만들어서 정리해주고, 노토 산스 폰트를 추가해 주자. 구글 폰트 -> noto 검색 -> kr버전 -> 
플러스 버튼 눌러서 커스텀 들어간 다음 모든 종류 굵기 선택해주고, 랭귀지에 코리아도 선택해준다. -> 엠바드에서
스탠다드의 링크 복사 -> 인덱스 가서 웹폰트 라고 쓰고 헤드에 링크 시켜준다. -> 이제 사이트 갱신해서 텍스트 바뀌어서 나오는지 확인


<3. 배너 영역>
1. 배너영역은 이미지가 들어간다. 여기에는 컨테이너 쓰지 않는다.

<4. 헤더 반응형 모바일 버전>
1. 반응형은 한가지 섹션 끝날 때마다 해주는 것이 좋다. 다 끝내고 하면 어디서 스크롤바가 생기는지 알기 힘들다.

2. 컨테이너를 처음부터 너비로 1280픽셀로 줬다. 따라서 미디어쿼리에서 맨 처음 너비값인 1290픽셀로
한 다음에 해당 컨테이너를 100%로 잡아 줘야 한다. 그래야 정상적으로 나온다.

<4. 헤더반응형: 모바일 메뉴>
1. 가상 요소 만들때 태그::before 라고 먼저 만드는 것이 정석이다. 그러나 IE8~9에 호환되는 호환성
문제로 태그:before 라고 써주는 것이 좋다.

<5. swiper.js>
1. 기존에 슬릭.js는 터치가 안되서 대신 이걸로 쓴다.

<13. 새로운 영역>
1. 일러스트레이터로 svg 삼각형 만들기:
일러스트레이터로 삼각형 만든 다음에 다른 이름으로 저장 눌러서 SVG로 저장 하면 태그가 나온다.
그걸 HTML 파일에 붙여쓰면 된다. 이렇게 SVG로 도형을 그려서 아이콘으로 스면 그래픽이 깔끔하고
깨지지 않아서 좋다. 단점은 복잡한 도형으로 작업할 경우 용량이 커지며, 익스플로어10 이상 부터만
적용된다.

<14. 새로운 영역2>
1. Box-sizing: border-box 기능 으로 보더값을 박스 안쪽에 넣을 수 있다.
박스 만들고 보더값 설정하면 해당 박스 밖에 보더값이 생기지만, 박스 사이징: 보더 박스 를
주면, 해당 박스 너비 안쪽에 보더값이 생긴다.

2. 이미지 스플라이스로 이미지 가져오는데 해당 영역에 이미 백그라운드가 있으면 이미지가
적용되지 않는다. 반드시 해당 영역에 다른 백그라운드 없도록 한다.

3. 이미지 파일과 텍스트의 수평간에 격차가 생긴다면, 텍스트는 상하 이동을 못하니 해당 이미지의
태그에 vertical-align을 줘서 이미지를 상하조율하여 텍스트와 수평이 되도록 해야 한다. 

<15. 공지사항>
1. dl -> dt 로 해주면 ul -> li 보다 따로 이름 지어주지 않아도 컨트롤 하기 편하다. 근데 이게 무슨 말인지 모르겠다.

2. 공지사항 탭은 웹표준 준수해서 만들것이다. ul -> li 기본 구조에 dl -> dt 와 dd 구조를 병행한다.
기본 구조는 섹션 -> 컨테이너 -> 로우 -> 클래스 구조이고 세부적으로는 클래스 -> 아티클 -> h3와 ul ->
li -> dl -> dt 와 dd 구조가 된다.

<19. 푸터영역>
1. position에 static을 주면 본래 가지고 있던 속성, 위치로 되돌아간다.

<20. 탭 메뉴, 스킵메뉴>
1. target.next() 는 선택된 this의 아래 태그를 의미한다. 동료 태그가 아니다.
예를 들어  li -> ul -> li 구조 상에서 맨 처음 li가 대상이라면, target.next()는 그 아래 위치한 ul이 된다.

<21. 유튜브 API >
1. 셀렉터 캐시를 이용해서 객체 1개에 여러 변수를 포함시키고, 한번에 불러올수 있다.

2. 유튜브 영상을 불러오기 위해서는 해당 영상의 아이디가 필요하다. 영상 아이디는 유튜브 영상의 공유 -> 
주소 태그에서 https://youtu.be/ 이거 다음에 나오는 텍스트가 해당 동영상 아이디 이다. 이걸 id="showTrailer"
가 있는 DIV에 data-youtube=" " 이렇게 데이터 속성 주고 이 안에 아이디값을 넣어줘야 한다.

3. player.obj.stopVideo(); 이걸 꼭 
// iframe 감추기
        function hidePlayer(){ 이 안에 넣어줘야 한다. 안그러면 동영상이 계속 재생중인 상태로 나온다.
                                     물론 동영상 끄면 화면은 안보이지만 스트리밍이 계속 되고 있기 때문에
                                     사운드가 계속 나오며, 동영상 재생을 다시 누르면 진행 중인 영상이 나온다. }

4. COLOR : TRANSPARENT 는 텍스트 투명도를 의미한다.

<22. 마무리 정리 및 깃허브 사용>
1. 깃허브 사이트 가서 로그인 할때는 sign in 눌러야 로그인 이다. 그리고 보통 desktop github를 pc에 설치,
그걸 이용해서 파일을 깃허브에 올린다. 닷홈과 파일질라 같은 방식인데, 닷홈은 1년 후에 사라지기 때문에
만든 파일은 반드시 깃허브에 저장하는 것을 추천한다. 